version: "3.6"
services:
    portainer:
        image: portainer/portainer
        container_name: portainer
        restart: always
        command: -H unix:///var/run/docker.sock
        ports:
            - "9000:9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${USERDIR}/docker/portainer/data:/data
            - ${USERDIR}/docker/shared:/shared
        environment:
            - TZ=${TZ}
    organizr:
        container_name: organizr
        restart: always
        image: lsioarmhf/organizr
        volumes:
            - ${USERDIR}/docker/organizr:/config
            - ${USERDIR}/docker/shared:/shared
        ports:
            - 80:80
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    mariadb:
        image: "lsioarmhf/mariadb"
        container_name: "mariadb"
        hostname: mariadb
        volumes:
            - ${USERDIR}/docker/mariadb:/config
        ports:
          - target: 3306
            published: 3306
            protocol: tcp
            mode: host
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    phpmyadmin:
        hostname: phpmyadmin
        container_name: phpmyadmin
        image: ebspace/armhf-phpmyadmin
        restart: always
        links:
            - mariadb:db
        ports:
            - 8081:80
        environment:
            - PMA_HOST=mariadb
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    watchtower:
        container_name: watchtower
        restart: always
        image: v2tec/watchtower:armhf-latest
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: --schedule "0 0 4 * * *" --cleanup
    homeassistant:
        container_name: homeassistant
        restart: always
        image: homeassistant/armhf-homeassistant
        devices:
            - /dev/ttyUSB0:/dev/ttyUSB0
            - /dev/ttyUSB1:/dev/ttyUSB1
            - /dev/ttyACM0:/dev/ttyACM0
        volumes:
            - ${USERDIR}/docker/homeassistant:/config
            - /etc/localtime:/etc/localtime:ro
            - ${USERDIR}/docker/shared:/shared
        ports:
            - "8123:8123"
        privileged: true
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    transmission-vpn:
        container_name: transmission-vpn
        image: lsioarmhf/transmission
        cap_add:
            - NET_ADMIN
        devices:
            - /dev/net/tun
        restart: always
        ports:
            - "9091:9091"
            - "51413:51413/udp"
        dns:
            - 1.1.1.1
            - 1.0.0.1
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ${USERDIR}/docker/transmission-vpn:/data
            - ${USERDIR}/docker/shared:/shared
            - ${USERDIR}/Downloads:/data/watch
            - ${USERDIR}/Downloads/completed:/data/completed
            - ${USERDIR}/Downloads/incomplete:/data/incomplete
        environment:
            - LOCAL_NETWORK=192.168.1.0/24
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
            - TRANSMISSION_RPC_HOST_WHITELIST="127.0.0.1,192.168.*.*"
            - TRANSMISSION_RPC_PASSWORD=webui_password
            - TRANSMISSION_RPC_USERNAME=webui_username
            - TRANSMISSION_UMASK=002
            - TRANSMISSION_RATIO_LIMIT=1.00
            - TRANSMISSION_RATIO_LIMIT_ENABLED=true
    sabnzbd:
        image: "lsioarmhf/sabnzbd"
        container_name: "sabnzbd"
        volumes:
            - ${USERDIR}/docker/sabnzbd:/config
            - ${USERDIR}/Downloads/completed:/downloads
            - ${USERDIR}/Downloads/incomplete:/incomplete-downloads
            - ${USERDIR}/docker/shared:/shared
        ports:
            - "8080:8080"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    radarr:
        image: "lsioarmhf/radarr"
        container_name: "radarr"
        volumes:
            - ${USERDIR}/docker/radarr:/config
            - ${USERDIR}/Downloads/completed:/downloads
            - ${USERDIR}/media/movies:/movies
            - "/etc/localtime:/etc/localtime:ro"
            - ${USERDIR}/docker/shared:/shared
        ports:
            - "7878:7878"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    sonarr:
        image: "lsioarmhf/sonarr"
        container_name: "sonarr"
        volumes:
            - ${USERDIR}/docker/sonarr:/config
            - ${USERDIR}/Downloads/completed:/downloads
            - ${USERDIR}/media/tvshows:/tv
            - "/etc/localtime:/etc/localtime:ro"
            - ${USERDIR}/docker/shared:/shared
        ports:
            - "8989:8989"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    plexms:
        container_name: plexms
        restart: always
        image: lsioarmhf/plex
        volumes:
            - ${USERDIR}/docker/plexms:/config
            - ${USERDIR}/Downloads/plex_tmp:/transcode
            - /media/media:/media
            - ${USERDIR}/docker/shared:/shared
        ports:
            - "32400:32400/tcp"
            - "3005:3005/tcp"
            - "8324:8324/tcp"
            - "32469:32469/tcp"
            - "1900:1900/udp"
            - "32410:32410/udp"
            - "32412:32412/udp"
            - "32413:32413/udp"
            - "32414:32414/udp"
        environment:
            - TZ=${TZ}
            - HOSTNAME="Docker Plex"
            - PLEX_CLAIM="claim-YYYYYYYYY"
            - PLEX_UID=${PUID}
            - PLEX_GID=${PGID}
            - ADVERTISE_IP="http://SERVER-IP:32400/"
    hydra:
        image: "linuxserver/hydra"
        container_name: "hydra"
        volumes:
            - ${USERDIR}/docker/hydra:/config
            - ${USERDIR}/Downloads:/downloads
            - ${USERDIR}/docker/shared:/shared
        ports:
            - "5075:5075"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
    jackett:
        image: "linuxserver/jackett"
        container_name: "jackett"
        volumes:
            - ${USERDIR}/docker/jackett:/config
            - ${USERDIR}/Downloads/completed:/downloads
            - "/etc/localtime:/etc/localtime:ro"
            - ${USERDIR}/docker/shared:/shared
        ports:
            - "9117:9117"
        restart: always
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
